version: '3.8'

services:
  fastapi:
    build:
      context: .
    container_name: fastapi_app
    ports:
      - "8000:8000"
      - "8888:8888"
    environment:
      SOCKET_IP: ${SOCKET_IP}
    depends_on:
      db:
        condition: service_healthy  # FastAPI waits until PostgreSQL is healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: ${TRACKER_POSTGRES_USER}
      POSTGRES_PASSWORD: ${TRACKER_POSTGRES_PASSWORD}
      POSTGRES_DB: ${TRACKER_POSTGRES_DB}
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${TRACKER_POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5
